# TODO use v1.recommended.yaml, remove duplicates in "rules" section
# This includes a global ignore of `uri_has_not_been_generated`. See: https://github.com/Workiva/over_react/blob/new_boilerplate_wip/doc/new_boilerplate_migration.md#ignore-ungenerated-warnings-project-wide>

analyzer:
  errors:
    # Protect against using language features that are incompatible with the
    # minimum SDK version for the current project:
    sdk_version_async_exported_from_core: warning
    sdk_version_as_expression_in_const_context: warning
    sdk_version_bool_operator_in_const_context: warning
    sdk_version_eq_eq_operator_in_const_context: warning
    sdk_version_extension_methods: warning
    sdk_version_is_expression_in_const_context: warning
    sdk_version_set_literal: warning
    sdk_version_ui_as_code: warning
    sdk_version_ui_as_code_in_const_context: warning

    # Promote some builtin hints/infos/warnings to errors:
    dead_code: warning
    duplicate_hidden_name: warning
    duplicate_import: warning
    duplicate_shown_name: warning
    unused_catch_clause: warning
    unused_catch_stack: warning
    unused_element: warning
    unused_field: warning
    unused_import: warning
    unused_local_variable: warning
    unused_shown_name: warning

    # Promote enabled lints to errors:
    annotate_overrides: warning
    avoid_double_and_int_checks: warning
    avoid_empty_else: warning
    avoid_init_to_null: warning
    avoid_private_typedef_functions: warning
    avoid_return_types_on_setters: warning
    avoid_shadowing_type_parameters: warning
    avoid_single_cascade_in_expression_statements: warning
    avoid_types_as_parameter_names: warning
    await_only_futures: warning
    camel_case_extensions: warning
    camel_case_types: warning
    cancel_subscriptions: warning
    close_sinks: warning
    empty_catches: warning
    empty_constructor_bodies: warning
    empty_statements: warning
    file_names: warning
    hash_and_equals: warning
    implementation_imports: warning
    iterable_contains_unrelated_type: warning
    library_names: warning
    library_prefixes: warning
    list_remove_unrelated_type: warning
    no_adjacent_strings_in_list: warning
    no_duplicate_case_values: warning
    null_closures: warning
    only_throw_errors: warning
    prefer_contains: warning
    prefer_equal_for_default_values: warning
    prefer_generic_function_type_aliases: warning
    prefer_if_null_operators: warning
    prefer_is_empty: warning
    prefer_is_not_empty: warning
    recursive_getters: warning
    slash_for_doc_comments: warning
    type_init_formals: warning
    unnecessary_const: warning
    unnecessary_new: warning
    unnecessary_null_aware_assignments: warning
    unnecessary_null_in_if_null_operators: warning
    unnecessary_statements: warning
    unsafe_html: warning
    unrelated_type_equality_checks: warning
    valid_regexps: warning
    void_checks: warning

    # Ignore ungenerated uri error:
    # See: <https://github.com/Workiva/over_react/blob/new_boilerplate_wip/doc/new_boilerplate_migration.md#ignore-ungenerated-warnings-project-wide>.
    uri_has_not_been_generated: ignore

linter:
  rules:
    annotate_overrides: true
    avoid_bool_literals_in_conditional_expressions: true
    avoid_classes_with_only_static_members: true
    avoid_double_and_int_checks: true
    avoid_null_checks_in_equality_operators: true
    avoid_returning_null_for_void: true
    avoid_returning_this: true
    avoid_setters_without_getters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_slow_async_io: true
    avoid_types_on_closure_parameters: false
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    await_only_futures: true
    camel_case_types: true
    cancel_subscriptions: true
    close_sinks: true
    comment_references: true
    hash_and_equals: true
    implementation_imports: true
    iterable_contains_unrelated_type: true
    list_remove_unrelated_type: true
    literal_only_boolean_expressions: true
    no_adjacent_strings_in_list: true
    package_names: true
    prefer_collection_literals: true
    prefer_conditional_assignment: true
    prefer_const_declarations: true
    prefer_constructors_over_static_methods: true
    prefer_function_declarations_over_variables: true
    prefer_generic_function_type_aliases: true
    prefer_if_null_operators: true
    prefer_initializing_formals: true
    prefer_null_aware_operators: true
    prefer_single_quotes: true
    prefer_spread_collections: true
    prefer_typing_uninitialized_variables: true
    provide_deprecation_message: true
    test_types_in_equals: true
    unnecessary_await_in_return: true
    unnecessary_brace_in_string_interps: true
    unnecessary_getters_setters: true
    unnecessary_lambdas: true
    unnecessary_null_aware_assignments: true
    unnecessary_overrides: true
    unnecessary_statements: true
    unsafe_html: true
    use_function_type_syntax_for_parameters: true
    use_to_and_as_if_applicable: true
    void_checks: true
    # Copied from workiva_analysis
    # annotate_overrides: true
    # avoid_double_and_int_checks: true
    avoid_empty_else: true
    avoid_init_to_null: true
    avoid_private_typedef_functions: true
    avoid_return_types_on_setters: true
    avoid_shadowing_type_parameters: true
    # avoid_single_cascade_in_expression_statements: true
    avoid_types_as_parameter_names: true
    # await_only_futures: true
    camel_case_extensions: true
    # camel_case_types: true
    # cancel_subscriptions: true
    # close_sinks: true
    empty_catches: true
    empty_constructor_bodies: true
    empty_statements: true
    file_names: true
    # hash_and_equals: true
    # implementation_imports: true
    # iterable_contains_unrelated_type: true
    library_names: true
    library_prefixes: true
    # list_remove_unrelated_type: true
    # no_adjacent_strings_in_list: true
    no_duplicate_case_values: true
    null_closures: true
    only_throw_errors: true
    prefer_contains: true
    prefer_equal_for_default_values: true
    # prefer_generic_function_type_aliases: true
    # prefer_if_null_operators: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    recursive_getters: true
    slash_for_doc_comments: true
    type_init_formals: true
    unnecessary_const: true
    unnecessary_new: true
    # unnecessary_null_aware_assignments: true
    unnecessary_null_in_if_null_operators: true
    # unnecessary_statements: true
    # unsafe_html: true
    unrelated_type_equality_checks: true
    valid_regexps: true
    # void_checks: true
